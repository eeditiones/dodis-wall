<?xml version="1.0" encoding="UTF-8"?>
<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:pb="http://teipublisher.com/1.0" xml:lang="en">change<teiHeader>
        <fileDesc>
            <titleStmt>
                <title>Dodis</title>
            </titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc>
        <revisionDesc>
            <change when="2018-01-08+01:00">Initial version</change>
        </revisionDesc>
    </teiHeader>date<text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="Dodis" source="teipublisher.odd">
                <elementSpec ident="dateline" mode="change">
                    <model behaviour="block" cssClass="tei-dateline">
            <outputRendition xml:space="preserve">
            text-align: right;
            </outputRendition>
        </model>
                </elementSpec>
 <elementSpec ident="ref" mode="change">
                    <model output="fo" predicate="parent::head" behaviour="block">
            <outputRendition xml:space="preserve">
            
            display: block;
margin-bottom: 30px;
text-align: center;
font-size: 1em;
            
            </outputRendition>
        </model>
                    <model output="fo" predicate="parent::head" behaviour="block">
            <outputRendition xml:space="preserve">
            
            display: block;
margin-bottom: 30px;
text-align: center;
font-size: 1em;
            
            </outputRendition>
        </model>
                    <model predicate="parent::head" behaviour="link" cssClass="tei-head-nr">
            <param name="link" value="if (starts-with(@target, '#')) then '?odd=' || request:get-parameter('odd', ()) || '&amp;amp;view=' || request:get-parameter('view', ()) || '&amp;amp;id=' || substring-after(@target, '#') else @target"/>
            <outputRendition xml:space="preserve">
            
            display: block;
margin-bottom: 30px;
text-align: left;
font-size: 0.7em;
margin-left: 20px;
            
            </outputRendition>
        </model>
                    <model output="fo" predicate="parent::note" behaviour="inline">
            <outputRendition xml:space="preserve">
            font-style: normal;
            </outputRendition>
        </model>
                    <model predicate="not(@target)" behaviour="inline" cssClass="tei-ref1">
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model>
                    <model output="web" predicate="not(text())" behaviour="link" cssClass="tei-ref2">
            <param name="content" value="@target"/>
            <param name="link" value="@target"/>
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model>
                    <model output="web" behaviour="link" cssClass="tei-link">
            <param name="link" value="if (starts-with(@target, '#')) then '?odd=' || request:get-parameter('odd', ()) || '&amp;amp;view=' || request:get-parameter('view', ()) || '&amp;amp;id=' || substring-after(@target, '#') else @target"/>
            <outputRendition xml:space="preserve">
            font-style: normal;
            </outputRendition>
        </model>
                </elementSpec>
              
                
                
                
                
                
                
                
                
                
                <elementSpec ident="title" mode="change">
                    <model output="fo" predicate="@type='sub'" behaviour="block">
            <outputRendition xml:space="preserve">
            
            
            text-align: center;
text-transform: uppercase;
font-style: italic;
            
            
            </outputRendition>
        </model>
                    <model output="fo" predicate="@type='main'" behaviour="block">
            <outputRendition xml:space="preserve">
            
            
            text-align: center;
text-transform: none;
font-style: italic;
display: inline-block;
            
            
            </outputRendition>
        </model>
                    <model predicate="@type='doc'" behaviour="block" cssClass="tei-title-doc">
            <outputRendition xml:space="preserve">
            
            
            font-style: italic;
margin-bottom: -20px;
text-indent: 20px;
display: block;
margin-top: 10px;
            
            
            </outputRendition>
        </model>
                    <model output="web" predicate="@type='sub'" behaviour="heading" cssClass="tei-title-sub">
            <outputRendition xml:space="preserve">
            font-variant: small-caps; font-style: normal; margin-top: 15px; text-align: center;
            </outputRendition>
        </model>
                    <model predicate="@type='main'" behaviour="inline" cssClass="tei-title-main">
            <outputRendition xml:space="preserve">
            font-style: italic; text-align: center;
            </outputRendition>
        </model>
                    <model output="web" predicate="(@tpye='alt' or @type='doc') and preceding-sibling::list" behaviour="inline" cssClass="tei-title-list">
            <outputRendition xml:space="preserve">
            font-style: italic; margin-left: 20px; margin-top: 10px;
            </outputRendition>
        </model>
                </elementSpec>
                
                <elementSpec ident="note" mode="change">
                                    <model output="web" predicate="$parameters?header='short'" behaviour="omit"/>


                    <model output="web" predicate="@type=&#34;merged&#34;" behaviour="section" cssClass="tei-note-merged"/>
                    <model behaviour="note" cssClass="tei-note">
            <param name="label" value="@n"/>
            <outputRendition xml:space="preserve">
            display: inline !important;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="head" mode="change">
                    <model predicate="$parameters?header='short'" behaviour="inline">
            <param name="content" value="replace(string-join(.//text()[not(parent::ref)]), '^(.*?)[^\w]*$', '$1')"/>
        </model>
                    <model predicate="parent::figure" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model>
                    <model predicate="parent::table" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model>
                    <model predicate="parent::lg" behaviour="block">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model>
                    <model predicate="parent::list" behaviour="block">
            <outputRendition xml:space="preserve">
            font-weight: bold;
            </outputRendition>
        </model>
                    <model predicate="parent::div" behaviour="heading" cssClass="tei-head-div">
            <param name="level" value="count(ancestor::div)"/>
            <outputRendition xml:space="preserve">
            text-align: center;
            </outputRendition>
        </model>
                    <model behaviour="block"/>
                </elementSpec>
                <elementSpec ident="list" mode="change">
                    <model output="print" behaviour="block" cssClass="asBlock"/>
                    <model output="web" behaviour="list" cssClass="tei-list">
            <outputRendition xml:space="preserve">
            
            
            padding-left: 0px;
text-indent: 20px;
            
            
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="item" mode="change">
                    <model output="print" behaviour="block" cssClass="tei-listAsP"/>
                    <model behaviour="listItem" cssClass="tei-item">
            <outputRendition xml:space="preserve">
            list-style-type: none;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="p" mode="change">
                    <model behaviour="paragraph" cssClass="tei-p">
            <outputRendition xml:space="preserve">
            
            </outputRendition>
            <outputRendition xml:space="preserve">
            text-align: justify; text-indent: 20px; margin-bottom: 0px;
margin-top:0px;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="add" mode="change">
                    <model predicate="@type='edition'" behaviour="inline" cssClass="tei-add-edition">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model>
                    <model predicate="parent::opener" behaviour="inline" cssClass="tei-add-opener"/>
                </elementSpec>
            <elementSpec ident="idno" mode="add">
                    <model behaviour="inline" cssClass="tei-idno">
            <outputRendition xml:space="preserve">
            font-style: normal;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="span" mode="add">
                    <model behaviour="inline" cssClass="tei-span">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model>
                </elementSpec>
            <elementSpec ident="opener" mode="change">
                    <model behaviour="block" cssClass="tei-opener">
            <outputRendition xml:space="preserve">
            margin-top: 10px; margin-bottom: 10px;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="emph" mode="add">
                    <model behaviour="inline" cssClass="tei-emph">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="table" mode="change">
                    <model behaviour="table" cssClass="tei-table">
            <outputRendition xml:space="preserve">
            
            
            margin-top: 10px; 
width: 80%;
margin-left: 20px;
            
            
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="cell" mode="change">
                    <model behaviour="cell" cssClass="tei-cell">
            <outputRendition xml:space="preserve">
            
            
            
            text-align: left;
vertical-align: top;
width: min-content;
            
            
            
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="castList" mode="change">
                    <model predicate="child::*" behaviour="list" cssClass="tei-cast" useSourceRendition="true">
            <param name="content" value="castItem"/>
            <outputRendition xml:space="preserve">
            list-style: ordered;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="hi" mode="change">
                    <model predicate="not(@rendition)" behaviour="inline" cssClass="tei-hi1">
            <outputRendition xml:space="preserve">
            vertical-align: super; line-height: 0; margin-left: 1px;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="date" mode="change">
                    <model output="print" predicate="text()" behaviour="inline"/>
                    <model output="print" predicate="@when and not(text())" behaviour="inline">
            <param name="content" value="@when"/>
        </model>
                    <model output="web" predicate="@when" behaviour="alternate" cssClass="tei-date-when">
            <param name="default" value="."/>
            <param name="alternate" value="@when"/>
        </model>
                    <model predicate="text()" behaviour="inline" cssClass="tei-date"/>
                </elementSpec>
            <elementSpec ident="row" mode="change">
                    <model behaviour="row" cssClass="tei-row"/>
                </elementSpec>
                <elementSpec ident="orig" mode="change">
                    <model behaviour="inline" cssClass="tei-orig">
            <outputRendition xml:space="preserve">
            font-style: normal;
            </outputRendition>
        </model>
                </elementSpec>
            <elementSpec ident="floatingText" mode="change">
                    <model behaviour="inline" cssClass="tei-float">
            <outputRendition xml:space="preserve" scope="before">
            content: "@@@ ";
            </outputRendition>
            <outputRendition xml:space="preserve">
            
            
            margin: 6pt; border: solid red 1pt; 
color: red;
            
            
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="pb" mode="change">
                    <model behaviour="break" useSourceRendition="true">
            <param name="type" value="'page'"/>
            <param name="label" value="(concat(if(@n) then concat(@n,' ') else '',if(@facs) then                   concat('@',@facs) else ''))"/>
            <outputRendition xml:space="preserve">
            display: block; margin-left: 4pt; color: grey; float: right;
            </outputRendition>
            <outputRendition xml:space="preserve" scope="before">
            content: '[Page ';
            </outputRendition>
            <outputRendition xml:space="preserve" scope="after">
            content: ']';
            </outputRendition>
        </model>
                </elementSpec>
            <elementSpec ident="div" mode="change">
                    <model behaviour="block" cssClass="tei-div"/>
                </elementSpec>
                
                    <elementSpec ident="titleStmt" mode="change">
                    <model output="latex" behaviour="meta">
            <param name="content" value="."/>
        </model>
                    <model output="fo" behaviour="heading"/>
                    <model predicate="$parameters?mode='title'" behaviour="heading">
            <param name="content" value="title[not(@type)]"/>
            <param name="level" value="5"/>
        </model>
                    <modelSequence output="web" predicate="$parameters?header='short'">
            <model behaviour="link">
                <param name="content" value="root(.)//div[@type='doc']/head/title[@type='sub']"/>
                <param name="uri" value="$parameters?doc"/>
            </model>
           
            <model behaviour="block">
                <param name="content" value="title"/>
            </model>
            <model behaviour="block">
                <param name="content" value="author"/>
            </model>
        </modelSequence>
                    <model output="web" behaviour="block"/>
                </elementSpec>
            </schemaSpec>
        </body>
    </text>
</TEI>